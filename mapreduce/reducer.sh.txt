#!/usr/bin/env bash
set -euo pipefail

# =====================
# CM4IR Kaggle Reducer
# - Designed to run after one or more mapper runs finished
# - Summarises produced outputs in exp/image_samples/*
# - Optionally acts as identity passthrough (MODE=identity)
# =====================

MODE=${MODE:-summary}
BASE_DIR=${BASE_DIR:-/kaggle/working}
if [[ ! -d "$BASE_DIR" ]]; then BASE_DIR=${BASE_DIR:-/workspace}; fi
if [[ ! -d "$BASE_DIR" ]]; then BASE_DIR=$(pwd); fi

if [[ "$MODE" == "identity" ]]; then
  cat
  exit 0
fi

SAMPLES_ROOT="$BASE_DIR/exp/image_samples"
if [[ ! -d "$SAMPLES_ROOT" ]]; then
  echo "SUMMARY\tDONE=0\tIMAGES=0" 1>&2
  exit 0
fi

DONE_COUNT=0
IMAGE_TOTAL=0
FAIL_COUNT=0

for dir in "$SAMPLES_ROOT"/*; do
  [[ ! -d "$dir" ]] && continue
  # Count PNGs
  cnt=$(ls "$dir"/*.png 2>/dev/null | wc -l | awk '{print ($1==""?0:$1)}')
  if [[ "$cnt" -gt 0 ]]; then
    ((DONE_COUNT++))
    ((IMAGE_TOTAL+=cnt))
  fi
  # Look for error markers in logs if present
  if [[ -f "$dir/0_logs.log" ]]; then
    if grep -qiE "(error|exception|traceback)" "$dir/0_logs.log"; then
      ((FAIL_COUNT++))
    fi
  fi
  echo "DIR $dir\tIMAGES=$cnt"

done

echo "SUMMARY\tDONE=$DONE_COUNT\tIMAGES=$IMAGE_TOTAL\tFAIL=$FAIL_COUNT" 1>&2